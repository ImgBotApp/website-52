include ../template/_mixins

.row.row--fullheight
	.col-sm-9.col--main
		h1.h--primary add new game
		hr
		p Note that a game is completely decoupled from its releases. Data appearing in here is common to all releases
			| that are linked to that game, but kept as a separate and independent data set.

		form(role="form")

			//-----------------------------------------------------------------
			h1 1. Enter Title
			hr
			.form-group(ng-class="{ error: vm.errors.title }")
				input.form-control.input-lg(type="text", placeholder="Title", ng-model="vm.game.title", on-enter="vm.searchOnIpdb()")
				.alert.alert-danger(ng-show="vm.errors.title")
					+icon('warning').shift-up.space-right
					| {{ vm.errors.title }}
				span.help-block No year, manufacturer or anything else, just the title. Example: <i>The Addams Family</i>.

			//-----------------------------------------------------------------
			h1 2. Origin
			hr
			p If you’ve created the game by yourself, it’s an original game. I’ve you built a game that exists in real
				| life, it’s called a recreation. Recreations must be on IPDB.org.

			.text-center.padder-top
				.radio-inline.radio--lg
					label
						input.input-lg(type="radio", name="origin", value="recreation", ng-model="vm.game.origin")
						span: b Recreation

				.radio-inline.radio--lg
					label
						input(type="radio", name="origin", value="originalGame", ng-model="vm.game.origin")
						span: b Original Game

			.clearfix
			h1 3. Game Info
			hr

			//- form for recreations
			//-----------------------------------------------------------------
			p(ng-show="vm.game.origin == 'recreation'") Search IPDB.org and locate the IPDB number. Paste it into the
				| field below and hit "fetch". If the correct game info is displayed, you're done in here.

			.form-horizontal(ng-show="vm.game.origin == 'recreation'")
				.form-group(ng-class="{ error: vm.errors['ipdb.number'] }")
					label.col-sm-3.control-label(for="ipdbUrl") IPDB
					.col-sm-6
						input#ipdbUrl.form-control(type="text", ng-model="vm.game.ipdbUrl", placeholder="URL or Number", on-enter="vm.refresh()")
						a.a--lighter#ipdbLink(href="http://www.ipdb.org/search.pl?any={{ vm.game.title | escape }}&search=Search+Database&searchtype=quick", target="_blank")
							+icon('external-link').small.shift-up.space-right
							| Search title on IPDB.org
					.col-sm-3
						button.btn.btn-default.btn--width-med.pull-right(ng-click="vm.refresh()")
							+icon('refresh').space-right
							| Fetch

				.alert.alert-danger.alert--shifted-up(ng-show="vm.errors['ipdb.number']")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors['ipdb.number'] }}

				.form-group(ng-class="{ error: errors.id }")
					label.col-sm-3.control-label(for="gameId1") Game ID
					.col-sm-6
						.input-group
							input#gameId1.form-control(type="text", ng-model="vm.game.id", placeholder="Common Abbreviation", ng-change="vm.game.data.idValidated = false", on-enter="vm.check()")
							span.input-group-addon(ng-class="{ transparent: !vm.game.data.idValidated }")
								+icon('check').small(ng-show="vm.game.data.idValid")
								+icon('times').small(ng-hide="vm.game.data.idValid")
						span.help-block Must be unique and contain only letters and dashes.
					.col-sm-3
						button.btn.btn-default.btn--width-med.pull-right(ng-click="vm.check()", ng-disabled="vm.game.data.idValidated")
							+icon('check').space-right
							| Check

				.alert.alert-danger.alert--shifted-up-2x(ng-show="vm.errors.id")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.id }}

				.form-group(ng-show="!vm.game.data.year", ng-class="{ error: vm.errors.year }")
					label.col-sm-3.control-label(for="year") Year
					.col-sm-3.col-md-2
						input#year.form-control(type="text", ng-model="vm.game.year")
					.col-sm-6.col-md-7
						span.help-block Release year of this game (no info on IPDB.org)

				.alert.alert-danger.alert--shifted-up-2x(ng-show="vm.errors.year && !vm.game.data.year")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.year }}

			.col-md-offset-2.col-md-8.col-sm-offset-1.col-sm-10(ng-show="vm.game.origin == 'recreation'")
				.panel(ng-show="vm.game.data.fetched")
					.panel-heading
						h2.h--small.text-center {{ vm.game.title }}
					.panel-body
						dl.dl-horizontal.dl--centered
							dt Manufacturer
							dd {{ vm.game.manufacturer }}
							dt Year
							dd {{ vm.game.year }}
							dt
						hr.hr--margin-small(ng-show="vm.game.units || vm.game.ipdb.rating || vm.game.game_type || vm.game.model_number")
						dl(ng-show="vm.game.produced_units || vm.game.ipdb.rating || vm.game.type || vm.game.model_number").dl-horizontal.dl--centered
							dt(ng-show="vm.game.ipdb.rating") IPDB Rating
							dd(ng-show="vm.game.ipdb.rating") {{ vm.game.ipdb.rating }}
							dt(ng-show="vm.game.produced_units") Production
							dd(ng-show="vm.game.produced_units") {{ vm.game.produced_units | number }} units
							dt(ng-show="vm.game.game_type") Game Type
							dd(ng-show="vm.game.game_type") {{ vm.game.game_type | gametype }}
							dt(ng-show="vm.game.model_number") Model Number
							dd(ng-show="vm.game.model_number") {{ vm.game.model_number }}
						hr.hr--margin-small(ng-show="vm.game.designers || vm.game.artists")
						dl(ng-show="vm.game.designers || vm.game.artists").dl-horizontal.dl--centered
							dt(ng-show="vm.game.designers") Game Design
							dd(ng-show="vm.game.designers") {{ vm.game.designers.join(', ') }}
							dt(ng-show="vm.game.artists") Art design
							dd(ng-show="vm.game.artists") {{ vm.game.artists.join(', ') }}
				.panel.panel--fixed-height-300.panel--blank(ng-hide="vm.game.data.fetched")
					.panel-content
						+icon('ipdb').icon-ipdb--huge.space-right
						span INFO
						p.padder-top
							i Click "Fetch" to load data.


			//- form for original games
			//-----------------------------------------------------------------
			p(ng-show="vm.game.origin == 'originalGame'") Provide some more information about your table.

			.form-horizontal(ng-show="vm.game.origin == 'originalGame'")

				.form-group(ng-class="{ error: vm.errors.id }")
					label.col-sm-3.control-label(for="gameId2") Game ID
					.col-sm-6
						.input-group
							input#gameId2.form-control(type="text", ng-model="vm.game.id", placeholder="Common Abbreviation", ng-change="vm.game.data.idValidated = false")
							span.input-group-addon(ng-class="{ transparent: !vm.game.data.idValidated }")
								+icon('check').small(ng-show="vm.game.data.idValid")
								+icon('times').small(ng-hide="vm.game.data.idValid")
						span.help-block Must be unique and contain only letters and dashes.
					.col-sm-3
						button.btn.btn-default.btn--width-med.pull-right(ng-click="vm.check()", ng-disabled="vm.game.data.idValidated")
							+icon('check').space-right
							| Check

				.alert.alert-danger.alert--shifted-up-2x(ng-show="vm.errors.id")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.id }}

				.form-group
					label.col-sm-3.control-label(for='author', ng-class="{ error: vm.errors.manufacturer }") Author
					.col-sm-6
						input#author.form-control(type="text", ng-model="vm.game.manufacturer", placeholder="Your name, nick name or pen name", ng-class="{ error: vm.errors.manufacturer }")
						span.help-block This will show up as manufacturer.
					label.col-sm-1.control-label.text-right(for='year2', ng-class="{ error: vm.errors.year }") Year
					.col-sm-2.form-subgroup
						input#year2.form-control(type="text", ng-model="vm.game.year", ng-class="{ error: vm.errors.year }")

				.alert.alert-danger.alert--shifted-up(ng-show="vm.errors.manufacturer")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.manufacturer }}

				.alert.alert-danger.alert--shifted-up(ng-show="vm.errors.year")
					.row
						.col-sm-9.col-sm-offset-3
							+icon('warning').shift-up.space-right
							| {{ vm.errors.year }}

				.form-group
					label.col-sm-3.control-label Description
					.col-sm-9
						editor.tabset--light(ng-model="vm.game.description", placeholder="Description of the original table", markdown-text="Markdown enabled.")

				.form-group
					label.col-sm-3.control-label Instructions
					.col-sm-9
						editor.tabset--light(ng-model="vm.game.instructions", placeholder="Put game instructions here", markdown-text="Markdown enabled.")

			//- URLs (let's do that another time)
				.clearfix
				h4
					+icon('link').space-right
					| Links
				hr.hr--light

				.col-sm-3: label Type
				.col-sm-8: label URL

				.form-group(ng-repeat="link in game.links")

					.col-sm-3
						select.form-control
							option -- Select --
							option Wikipedia
							option WIP Thread
							option Discussion Thread
							option Pinside Link
							option Table Homepage
					.col-sm-8
						input.form-control(type="text", placeholder="http://...", ng-model="link.url")
					.col-sm-1
						+icon('trash')(ng-click="removeLink(link)")

				button.btn.btn-secondary.padder-top-2x.padder-bottom
					+icon('plus-circle').space-right
					| Add Another
			.clearfix

			//-----------------------------------------------------------------
			h1 4. Upload Media
			hr
			p Upload high quality artwork here. The backglass is mandatory but also the logo is strongly recommended.
				| Please check the image guidelines if you haven’t done so yet. Note that the images you upload here
				| are only used on the site to enhance the user experience. Media users download in media packs or
				| individually can be added in later step.

			//- backglass
			.row.padder-top
				.col-sm-6
					.panel.panel--blank(
						file-upload="{ controller: vm, type: 'backglass', key: 'backglass', status: vm.game.mediaFile, onSuccess: vm.onBackglassUpload, onClear: vm.onMediaClear, allowedExtensions: ['jpg', 'png'], allowMultipleFiles: false }"
						ngf-drag-over-class="'panel--dragging'"
					)
						.panel-body.a.a--darker
							.img.img--ar-bg.loaded(img-bg="vm.game.mediaFile.backglass.variations['medium-2x']")
								.text-center.vertical-center--100
									uib-progressbar.progress--fixed-absolute.progress-striped.active(
										value="vm.game.mediaFile.backglass.progress", ng-show="vm.game.mediaFile.backglass.uploading")
									.span(ng-show="!img.url")
										+icon('photo').svg-4x(ng-class="{ transparent: vm.game.mediaFile.backglass.uploading }")
										p {{ vm.mediaFile.backglass.uploadText }}
									.span(ng-show="img.loading")
										+icon('gear').svg-3x.svg-spin--slow
										p Generating thumbnails...

				.col-sm-6
					h4.h--large.h--no-margin Backglass
					i A few guidelines:
					ul
						li The aspect ratio should be <code>5:4</code> (or <code>1:1.25</code>)
						li Recommended resolution is <i>1280&times;1024</i>.
						li The DMD area should be cut off.
						li The image must not be stretched or upscaled.

					// info boxes
					.alert.alert-success.alert--inverted.alert--shifted-up.padder-top(ng-show="vm.backglass.test == 'optimal'")
						+icon('check-circle').shift-up.space-right
						| Dimensions are {{ vm.backglass.dimensions }}, which is optimal.
					.alert.alert-warning.alert--inverted.alert--shifted-up.padder-top(ng-show="vm.backglass.test == 'warning'")
						+icon('warning').shift-up.space-right
						| Dimensions are {{ vm.backglass.dimensions }}, where the aspect ratio is <code>1:{{ vm.backglass.ar }}</code> and {{ vm.backglass.arDiff }}% off the ideal <code>1:1.25</code>. Some content will be cropped off.
					.alert.alert-danger.alert--inverted.alert--shifted-up.padder-top(ng-show="vm.backglass.test == 'error'")
						+icon('warning').shift-up.space-right
						| Dimensions are {{ vm.backglass.dimensions }}, where the aspect ratio is <code>1:{{ vm.backglass.ar }}</code> and <strong>{{ vm.backglass.arDiff }}%</strong> off the ideal <code>1:1.25</code>. Please crop the image and try again.

			.alert.alert-danger.alert--shifted-up(ng-show="vm.errors['_backglass']")
				+icon('warning').shift-up.space-right
				| {{ vm.errors['_backglass'] }}

			//- logo
			.row.padder-top
				.col-sm-6
					.panel.panel--blank(
						file-upload="{ controller: vm, type: 'logo', key: 'logo', status: vm.game.mediaFile, onSuccess: vm.onLogoUpload, onClear: vm.onMediaClear, allowedExtensions: ['jpg', 'png'], allowMultipleFiles: false }"
						ngf-drag-over-class="'panel--dragging'"
					)
						.panel-body.a.a--darker
							.img.img--ar-logo.img--fit.loaded(img-bg="vm.game.mediaFile.logo")
								.text-center.vertical-center--100
									uib-progressbar.progress--fixed-absolute.progress-striped.active(
										value="game.mediaFile.logo.progress", ng-show="vm.game.mediaFile.logo.uploading")
									.span(ng-show="!img.url")
										+icon('photo').svg-4x(ng-class="{ transparent: vm.game.mediaFile.logo.uploading }")
										p {{ vm.mediaFile.logo.uploadText }}
									.span(ng-show="img.loading")
										+icon('gear').svg-3x.svg-spin--slow
										p Generating thumbnails...

				.col-sm-6
					h4.h--large.h--no-margin Logo
					ul
						li Use the PNG format
						li Background should be transparent
						li There should be enough contrast on white as well as on black background.

			hr
			button.btn.btn-default.btn-lg(ng-click="vm.reset()") Reset
			button.btn.btn-primary.btn-lg.pull-right(ng-click="vm.submit()", ng-disabled="vm.submitting") Add New Game
			.clearfix

			p
				br

	.col-sm-3.col--menu
		h1 Requests
		hr
		i(ng-show="vm.gameRequests.length == 0") No open game requests.
		span(ng-repeat="gameRequest in vm.gameRequests")
			.media.media--selectable(ng-click="vm.selectGameRequest(gameRequest)", ng-class="{ active: gameRequest.id === vm.game._game_request }")
				.media-left.media-middle
					img.img-avatar.img-avatar--sm(gravatar-src="gameRequest.created_by.gravatar_id", gravatar-default="retro", fallback-icon="user")
				.media-body
					b {{ gameRequest.ipdb_title }}
					br
					| {{ gameRequest.created_by.username }}, <span am-time-ago="gameRequest.created_at"></span>
			div(uib-collapse="gameRequest.id !== vm.game._game_request")
				p(ng-show="gameRequest.title")
					h5.h--primary.h--no-margin(ng-show="gameRequest.title") Title given by user
					| {{ gameRequest.title }}
				p(ng-show="gameRequest.notes")
					h5.h--primary.h--no-margin(ng-show="gameRequest.notes") Notes
					| {{ gameRequest.notes }}
				h5.h--primary.h--no-margin Message to user
				textarea.form-control(ng-model="denyMessage")
				button.btn.btn-hollow.padder-top.padder-bottom.pull-right(ng-disabled="!denyMessage", ng-click="vm.closeGameRequest(gameRequest, denyMessage)") Deny and close
				.clearfix

